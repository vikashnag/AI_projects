# -*- coding: utf-8 -*-
"""covid 19(complete).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MyOhfvk1bw8vchxMFsLXKiqC9IJ-LGir
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

import plotly.express as px

from fbprophet import Prophet

covid = pd.read_csv("covid_19_clean_complete.csv", parse_dates= ['Date'])

covid.head()

covid.info()

covid = covid.drop(['Province/State'], axis=1)

covid['Active'] = covid['Confirmed'] - (covid['Deaths'] + covid['Recovered'])

covid.head()

# for finding data up to latest date

latest =  covid[covid['Date'] == covid['Date'].max()]
latest.head()

latest['Country/Region'].value_counts()

"""On 14-05-2020, there are 33 positive cases in China, 14 positive cases in Canada, 11 postive cases in France and so on."""

world = latest.groupby('Country/Region')['Confirmed', 'Deaths', 'Recovered', 'Active'].sum().reset_index()
world.head()

"""Total no of Confirmed, Deaths, Recovered, Active cases of all countries till 14th May."""

px.choropleth(world, locations= 'Country/Region', locationmode= 'country names',
             hover_name= 'Active', color= 'Deaths',
             range_color= [1, 10000], color_continuous_scale= 'Picnic',
             title= 'Countries with Active cases')

# Groupby using dates

total_active_cases= covid.groupby('Date')['Date', 'Active'].sum().reset_index()
total_recovered_cases= covid.groupby('Date')['Date','Recovered'].sum().reset_index()
total_death_cases= covid.groupby('Date')['Date', 'Deaths'].sum().reset_index()
total_confirmed_cases= covid.groupby('Date')['Date', 'Confirmed'].sum().reset_index()
total_active_cases

plt.figure(figsize=(12,6))
plt.scatter(total_confirmed_cases['Date'], total_confirmed_cases['Confirmed'], color= 'blue')
plt.scatter(total_active_cases['Date'], total_active_cases['Active'], color='red')
plt.scatter(total_death_cases['Date'], total_death_cases['Deaths'], color='black')
plt.scatter(total_recovered_cases['Date'], total_recovered_cases['Recovered'], color='green')
plt.xlabel('Dates')
plt.ylabel('Total no of overall cases')
plt.title('Overall report')

top_active = latest.groupby('Country/Region')['Active'].sum().sort_values(ascending= False).reset_index()
top_active.head(5)

"""These are the top 5 countries with highest no of active cases"""

top_death = latest.groupby('Country/Region')['Deaths'].sum().sort_values(ascending=False).reset_index()
top_death.head(5)

"""These are the top 5 countries with highest no of death cases."""

top_recovered = latest.groupby('Country/Region')['Recovered'].sum().sort_values(ascending=False).reset_index()
top_recovered.head(5)

"""These are the top 5 countries with highest no of recovered cases."""

sns.barplot(top_active['Country/Region'].head(5), top_active['Active'].head(5))

sns.barplot(top_death['Country/Region'].head(5), top_death['Deaths'].head(5))

US = covid[covid['Country/Region'] == 'US']
US = US.groupby('Date')['Active', 'Confirmed', 'Deaths', 'Recovered'].sum().reset_index()
US.head()

India = covid[covid['Country/Region'] == 'India']
India = India.groupby('Date')['Active', 'Confirmed', 'Deaths', 'Recovered'].sum().reset_index()
India.head()

China = covid[covid['Country/Region'] == 'China']
China = China.groupby('Date')['Active', 'Confirmed', 'Deaths', 'Recovered'].sum().reset_index()
China.head()

France = covid[covid['Country/Region'] == 'France']
France = France.groupby('Date')['Active', 'Confirmed', 'Deaths', 'Recovered'].sum().reset_index()
France.head()

Italy = covid[covid['Country/Region'] == 'Italy']
Italy = Italy.groupby('Date')['Active', 'Confirmed', 'Deaths', 'Recovered'].sum().reset_index()
Italy.head()

plt.figure(figsize=(12,6))
plt.xticks(rotation= 90)
plt.plot(US.Date, US['Active'], color='red', label= 'US')
plt.plot(China.Date, China['Active'], color='black', label='China')
plt.plot(Italy.Date, Italy['Active'], color='green', label='Italy')
plt.plot(India.Date, India['Active'], color='blue', label='India')
plt.legend()
plt.show()

plt.figure(figsize=(12,6))
plt.xticks(rotation= 90)
plt.plot(US.Date, US['Deaths'], color='red', label= 'US')
plt.plot(China.Date, China['Deaths'], color='black', label='China')
plt.plot(Italy.Date, Italy['Deaths'], color='green', label='Italy')
plt.plot(India.Date, India['Deaths'], color='blue', label='India')
plt.legend()
plt.show()

plt.figure(figsize=(12,6))
plt.xticks(rotation= 90)
plt.plot(US.Date, US['Recovered'], color='red', label= 'US')
plt.plot(China.Date, China['Recovered'], color='black', label='China')
plt.plot(Italy.Date, Italy['Recovered'], color='green', label='Italy')
plt.plot(India.Date, India['Recovered'], color='blue', label='India')
plt.legend()
plt.show()

confirmed= covid.groupby('Date')['Confirmed'].sum().reset_index()

confirmed = confirmed.rename(columns= {'Date':'ds', 'Confirmed': 'y'})
confirmed.head()

model= Prophet()
model.fit(confirmed)

future = model.make_future_dataframe(periods=7)

forecast= model.predict(future)

forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(7)

conf_plot= model.plot(forecast)

active= covid.groupby('Date')['Active'].sum().reset_index()

active = active.rename(columns= {'Date':'ds', 'Active': 'y'})
active.head()

model= Prophet()
model.fit(active)

future = model.make_future_dataframe(periods=7)

forecast= model.predict(future)

forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(7)

Active_plot= model.plot(forecast)

deaths= covid.groupby('Date')['Deaths'].sum().reset_index()

deaths = deaths.rename(columns= {'Date':'ds', 'Deaths': 'y'})
deaths.head()

model= Prophet()
model.fit(deaths)

future = model.make_future_dataframe(periods=7)

forecast= model.predict(future)

forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(7)

deaths_plot= model.plot(forecast)